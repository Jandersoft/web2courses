(dp1
S'output'
p2
S"<type 'exceptions.AttributeError'> 'Rows' object has no attribute 'lessons'"
p3
sS'layer'
p4
S'/home/julia/web2py/applications/courses_app/controllers/manage.py'
p5
sS'code'
p6
S'# -*- coding: utf-8 -*-\n\n##################################################################################\n####                                                                          ####\n####                              TEACHER PAGES                               ####\n####                                                                          ####\n##################################################################################\n\n@auth.requires_login()\ndef courses():\n    courses = db(Course).select()\n    return dict(courses=courses)\n\n@auth.requires_login()\ndef classes():\n    if request.vars.course:\n        course_id = int(request.vars.course)\n        classes = db(Class.course == course_id).select(orderby=~Class.start_date)\n    else:\n        classes = db(Class).select(orderby=Class.course|~Class.start_date)\n    return dict(classes=classes)\n\n@auth.requires_login()\ndef lessons():\n    import itertools\n\n    try:\n        class_id = int(request.args(0))\n    except:\n        redirect(URL(\'default\', \'index\'))\n\n    modules = db(Module.class_id == class_id).select()\n\n    all_lessons = {}\n    for lesson in modules.lessons.select():\n        videos = lesson.videos.select()\n        texts = lesson.texts.select()\n        exercises = lesson.exercises.select()\n        merged_records = itertools.chain(videos, texts, exercises)\n        contents = sorted(merged_records, key=lambda record: record[\'place\'])\n        all_lessons["lesson_%d" % lesson.id] = contents\n\n    return dict(modules=modules,\n                all_lessons=all_lessons)\n\n##################################################################################\n####                                                                          ####\n####                   CRUD PAGES FOR COURSES, CLASSES, ETC                   ####\n####                                                                          ####\n##################################################################################\n\n@auth.requires_login()\ndef new():\n    tables = [Course, Class]\n    pages = [\'courses\', \'classes\']\n    table_type = int(request.args(0))\n\n    form = crud.create(tables[table_type], next=request.vars.next)\n    return dict(form=form)\n\n@auth.requires_login()\ndef edit():\n    tables = [Course, Class]\n    table_type = int(request.args(0))\n    record_id = int(request.args(1))\n\n    form = crud.update(tables[table_type], record_id, next=request.vars.next)\n    return dict(form=form)\n\n@auth.requires_login()\ndef delete():\n    tables = [Course, Class]\n    table_type = int(request.args(0))\n    record_id = int(request.args(1))\n\n    crud.delete(tables[table_type], record_id, next=request.vars.next)\n\n\nresponse._vars=response._caller(lessons)\n'
p7
sS'snapshot'
p8
(dp9
sS'traceback'
p10
S'Traceback (most recent call last):\n  File "/home/julia/web2py/gluon/restricted.py", line 227, in restricted\n    exec ccode in environment\n  File "/home/julia/web2py/applications/courses_app/controllers/manage.py", line 79, in <module>\n  File "/home/julia/web2py/gluon/globals.py", line 393, in <lambda>\n    self._caller = lambda f: f()\n  File "/home/julia/web2py/gluon/tools.py", line 3440, in f\n    return action(*a, **b)\n  File "/home/julia/web2py/applications/courses_app/controllers/manage.py", line 35, in lessons\n    for lesson in modules.lessons.select():\nAttributeError: \'Rows\' object has no attribute \'lessons\'\n'
p11
s.